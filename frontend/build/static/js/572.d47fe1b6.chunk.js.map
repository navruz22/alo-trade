{"version":3,"file":"static/js/572.d47fe1b6.chunk.js","mappings":"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","sources":["Pages/CreateProduct/CreateProduct.js"],"sourcesContent":["import { filter, uniqueId } from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport SaveButton from \"../../Components/Buttons/SaveButton\";\r\nimport CheckboxList from \"../../Components/CheckboxList/CheckboxList\";\r\nimport UploadImages from \"../../Components/ImageCrop/UploadImages\";\r\nimport Description from \"../../Components/Inputs/Description\";\r\nimport Input from \"../../Components/Inputs/Input\";\r\nimport MinMaxPrice from \"../../Components/MinMaxPrice/MinMaxPrice\";\r\nimport UniversalModal from \"../../Components/Modal/UniversalModal\";\r\nimport RadioButtonList from \"../../Components/RadioButtons/RadioButtonList\";\r\nimport SelectCategory from \"../../Components/Select/SelectCategory\";\r\nimport SelectRegion from \"../../Components/Select/SelectRegion\";\r\nimport { universalToast } from \"../../Components/ToastMessages/ToastMessages\";\r\nimport { currencices } from \"../../Config/globalConstants\";\r\nimport {\r\n  clearSubcategories,\r\n  getAllCategories,\r\n  getSubcategories,\r\n} from \"../Category/categorySlice\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {\r\n  clearFilters,\r\n  filterCategories,\r\n  filterSubcategories,\r\n  filterSubcategories2,\r\n} from \"../Filter/filterSlice\";\r\nimport { getAllregions } from \"../Filter/regionsSlice\";\r\nimport { checkRegisterProduct } from \"../User/Products/constants\";\r\nimport {\r\n  createProduct,\r\n  getProductById,\r\n  updateProduct,\r\n} from \"../User/Products/productSlice\";\r\n\r\nconst CreateProduct = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const productId = location?.state?.productId;\r\n  const { tradetypes } = useSelector((state) => state.trade);\r\n  const { loading } = useSelector((state) => state.login);\r\n  const { regions } = useSelector((state) => state.regions);\r\n  const { categoriesWithSubcategories } = useSelector(\r\n    (state) => state.categories\r\n  );\r\n  const {\r\n    categories: categoriesList,\r\n    subcategories: subcategoriesList,\r\n    subcategories2: subcategoriesList2,\r\n  } = useSelector((state) => state.filter);\r\n\r\n  const [isVisibleFilter, setIsVisibleFilter] = useState(false);\r\n\r\n  const [tradeTypes, setTradeTypes] = useState([]);\r\n  const [region, setRegion] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [currency, setCurrency] = useState(\"UZS\");\r\n  const [districts, setDistricts] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [minPrice, setMinPrice] = useState(\"\");\r\n  const [maxPrice, setMaxPrice] = useState(\"\");\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  const clearErrors = () => {\r\n    setErrors(null);\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    name === \"name\" && setName(value);\r\n    name === \"description\" && setDescription(value);\r\n    name === \"minPrice\" && setMinPrice(value);\r\n    name === \"maxPrice\" && setMaxPrice(value);\r\n    clearErrors();\r\n  };\r\n\r\n  const selectRegion = (e) => {\r\n    clearErrors();\r\n    setRegion(e);\r\n    setDistricts(e.districts);\r\n  };\r\n\r\n  const selectDistrict = (e) => {\r\n    clearErrors();\r\n    setDistrict(e);\r\n  };\r\n\r\n  const changeTradeTypes = (e) => {\r\n    clearErrors();\r\n    const value = e.target.value;\r\n    const checked = e.target.checked;\r\n    const filtered = filter(tradeTypes, (tradeType) => tradeType !== value);\r\n    checked\r\n      ? setTradeTypes([...filtered, value])\r\n      : setTradeTypes([...filtered]);\r\n  };\r\n\r\n  const selectCategory = (e) => {\r\n    const value = e.value;\r\n    clearErrors();\r\n    setCategories(e);\r\n    dispatch(filterSubcategories([]));\r\n    dispatch(filterSubcategories2([]));\r\n    dispatch(filterCategories([value]));\r\n    dispatch(getSubcategories({ category: value }));\r\n  };\r\n\r\n  const changeCurrency = (e) => {\r\n    setCurrency(e.target.value);\r\n    clearErrors();\r\n  };\r\n\r\n  const enterHandler = (e) => {\r\n    clearErrors();\r\n    e.key === \"Enter\" && submitHandler();\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    clearErrors();\r\n    const data = {\r\n      name,\r\n      description: description,\r\n      tradetypes: tradeTypes,\r\n      region: region.value,\r\n      district: district.value,\r\n      categories: categoriesList,\r\n      subcategories: subcategoriesList,\r\n      subcategories2: subcategoriesList2,\r\n      status: statuses,\r\n      currency,\r\n      images,\r\n      minPrice: Number(minPrice),\r\n      maxPrice: Number(maxPrice),\r\n    };\r\n    const check = checkRegisterProduct({ ...data, setErrors });\r\n    check &&\r\n      dispatch(\r\n        productId\r\n          ? updateProduct({ id: productId, ...data })\r\n          : createProduct({ ...data })\r\n      ).then(({ error }) => {\r\n        if (!error) {\r\n          universalToast(\"Товар успешно создан!\", \"success\");\r\n          navigate(\"/profile/products\");\r\n          dispatch(clearFilters());\r\n        }\r\n      });\r\n  };\r\n\r\n  const setDatas = (product) => {\r\n    const {\r\n      tradetypes,\r\n      region,\r\n      district,\r\n      categories,\r\n      subcategories,\r\n      subcategories2,\r\n      status,\r\n      currency,\r\n      images,\r\n      minPrice,\r\n      maxPrice,\r\n      name,\r\n      description,\r\n    } = product;\r\n    const { districts } = region;\r\n    name && setName(name);\r\n    description && setDescription(description);\r\n    tradetypes && setTradeTypes(tradetypes);\r\n    region.label && setRegion(region);\r\n    district.label && setDistrict(district);\r\n    districts.length && setDistricts(districts);\r\n    categories && setCategories(categories);\r\n    status && setStatuses(status);\r\n    currency && setCurrency(currency);\r\n    images && setImages(images);\r\n    minPrice && setMinPrice(minPrice);\r\n    maxPrice && setMaxPrice(maxPrice);\r\n    categories && dispatch(filterCategories([categories[0].value]));\r\n    subcategories.length > 0 &&\r\n      dispatch(filterSubcategories([...subcategories.map((el) => el.value)]));\r\n    subcategories2.length > 0 &&\r\n      dispatch(filterSubcategories2([...subcategories2.map((el) => el.value)]));\r\n    dispatch(getSubcategories({ category: categories[0].value }));\r\n  };\r\n  useEffect(() => {\r\n    productId &&\r\n      dispatch(getProductById({ id: productId })).then(({ payload, error }) => {\r\n        if (error) {\r\n          UniversalModal(error.message, \"error\");\r\n        } else {\r\n          const { product } = payload;\r\n          setDatas(product);\r\n        }\r\n      });\r\n    return () => {\r\n      dispatch(filterSubcategories([]));\r\n      dispatch(filterSubcategories2([]));\r\n      dispatch(filterCategories([]));\r\n      dispatch(clearSubcategories());\r\n    };\r\n  }, [dispatch, productId]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n    dispatch(getAllregions());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-6\">\r\n        {isVisibleFilter && (\r\n          <div\r\n            className=\"fixed top-0 left-0 w-full h-full z-[100] bg-black bg-opacity-50 \"\r\n            onClick={() => setIsVisibleFilter(false)}\r\n          >\r\n            <Filter\r\n              onClick={() => setIsVisibleFilter(false)}\r\n              setFilterVisible={() => setIsVisibleFilter(false)}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"container max-w-[800px]\">\r\n          <div className=\"text-[28px] font-bold mb-3 text-center\">\r\n            Новый товар\r\n          </div>\r\n          <CheckboxList\r\n            list={tradetypes}\r\n            checkedList={tradeTypes}\r\n            cols={2}\r\n            headerText=\"Тип торговли*\"\r\n            headerStyle=\"text-sm\"\r\n            listStyle=\"ml-0\"\r\n            onChange={changeTradeTypes}\r\n          />\r\n          <SelectRegion\r\n            region={region}\r\n            selectRegion={selectRegion}\r\n            selectDistrict={selectDistrict}\r\n            district={district}\r\n            districts={districts}\r\n            regions={regions}\r\n            loading={loading}\r\n            labelRegion={\"Страна\"}\r\n            labelDistrict={\"Область\"}\r\n          />\r\n          <SelectCategory\r\n            categories={categories}\r\n            selectCategory={selectCategory}\r\n            categoriesWithSubcategories={categoriesWithSubcategories}\r\n            loading={loading}\r\n            labelCategory={\"Категория*\"}\r\n            openSubcategories={() => setIsVisibleFilter(!isVisibleFilter)}\r\n          />\r\n\r\n          <Input\r\n            onKeyUp={enterHandler}\r\n            label=\"Nomi*\"\r\n            labelStyle=\"font-normal\"\r\n            placeholder=\"Mahsulot yoki xizmat nomi\"\r\n            name=\"name\"\r\n            onChange={changeHandler}\r\n            value={name}\r\n          />\r\n          <Description\r\n            onKeyUp={enterHandler}\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={changeHandler}\r\n            label=\"Qo'shimcha ma'lumot*\"\r\n            labelStyle=\"font-normal\"\r\n            placeholder=\"Izoh\"\r\n          />\r\n          <div className=\"grid grid-cols-2\">\r\n            {/*<CheckboxList*/}\r\n            {/*  onChange={changeStatus}*/}\r\n            {/*  list={positions}*/}\r\n            {/*  headerText=\"Holati*\"*/}\r\n            {/*  headerStyle=\"text-sm text-[#777]\"*/}\r\n            {/*  checkedList={statuses}*/}\r\n            {/*/>*/}\r\n            <RadioButtonList\r\n              currency={currency}\r\n              onChange={changeCurrency}\r\n              list={currencices}\r\n              label=\"To'lov turi\"\r\n              name={uniqueId(\"valyuta\")}\r\n            />\r\n            <MinMaxPrice\r\n              onChange={changeHandler}\r\n              minPrice={minPrice}\r\n              maxPrice={maxPrice}\r\n              onKeyUp={enterHandler}\r\n            />\r\n          </div>\r\n          <UploadImages images={images} setImages={setImages} />\r\n          <div className=\"text-sm text-red-600 font-amazonbold text-center\">\r\n            {errors && errors}\r\n          </div>\r\n          <div>\r\n            <SaveButton\r\n              title=\"Saqlash\"\r\n              className=\"w-full mt-3\"\r\n              onClick={submitHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"names":["dispatch","useDispatch","location","useLocation","navigate","useNavigate","productId","state","tradetypes","useSelector","trade","loading","login","regions","categoriesWithSubcategories","categories","filter","categoriesList","subcategoriesList","subcategories","subcategoriesList2","subcategories2","useState","isVisibleFilter","setIsVisibleFilter","tradeTypes","setTradeTypes","region","setRegion","district","setDistrict","setCategories","name","setName","description","setDescription","statuses","setStatuses","currency","setCurrency","districts","setDistricts","images","setImages","minPrice","setMinPrice","maxPrice","setMaxPrice","errors","setErrors","clearErrors","changeHandler","e","target","value","enterHandler","key","submitHandler","data","status","Number","checkRegisterProduct","updateProduct","id","createProduct","then","error","universalToast","clearFilters","useEffect","getProductById","payload","UniversalModal","message","product","label","length","filterCategories","filterSubcategories","map","el","filterSubcategories2","getSubcategories","category","setDatas","clearSubcategories","getAllCategories","getAllregions","className","onClick","setFilterVisible","list","checkedList","cols","headerText","headerStyle","listStyle","onChange","checked","filtered","tradeType","selectRegion","selectDistrict","labelRegion","labelDistrict","selectCategory","labelCategory","openSubcategories","onKeyUp","labelStyle","placeholder","currencices","uniqueId","title"],"sourceRoot":""}