{"version":3,"file":"static/js/317.49ea3d14.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}