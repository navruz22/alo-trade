{"version":3,"file":"static/js/743.f1456be0.chunk.js","mappings":"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","sources":["Components/OfferChat/ChatUser.js","Components/OfferChat/ProductData.js","Components/OfferChat/ChatIncomingMessage.js","Components/OfferChat/ChatSendingMessage.js","Components/OfferChat/ChatInput.js","Config/socket.js","Components/OfferChat/HeaderMobileOffer.js","Pages/User/Offers/Offers.js"],"sourcesContent":["import React from \"react\";\r\nimport { IoArrowDownOutline, IoArrowUpOutline } from \"react-icons/io5\";\r\n\r\nconst ChatUser = ({ offer, user, changeOffer }) => {\r\n  const _id = user?._id;\r\n  const { order, product, messages, createdAt, offererUser } = offer;\r\n  const name = order ? order.name : product ? product.name : \"\";\r\n  const { message, isRead, user: chatUser } = messages;\r\n  const image = order ? order.images[0] : product ? product.images[0] : null;\r\n  const isUser = offererUser._id === _id;\r\n  const isNew = chatUser !== user?._id && !isRead;\r\n\r\n  return (\r\n    <div\r\n      onClick={changeOffer}\r\n      className=\"bg-white flex items-center hover:bg-grey-lighter cursor-pointer flex-row border-b pl-3\"\r\n    >\r\n      <div>\r\n        {image ? (\r\n          <img\r\n            alt={\"alotrade.uz\"}\r\n            className=\"h-12 w-12 rounded-full\"\r\n            src={image}\r\n          />\r\n        ) : (\r\n          <div className=\"h-12 w-12 rounded-full border-dashed bg-neutral-200 flex items-center justify-center\">\r\n            IMG\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"ml-4 flex-1 py-4 pr-2\">\r\n        <div className=\"flex items-bottom justify-between\">\r\n          <p className=\"text-neutral-500 font-amazonbold h-6 overflow-hidden\">\r\n            {name}\r\n          </p>\r\n          <p className=\"text-xs text-neutral-600\">\r\n            {new Date(createdAt).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"text-neutral-500 mt-1 text-sm h-6 overflow-hidden\">\r\n            {message && message}\r\n          </p>\r\n          {isNew && (\r\n            <p className=\"text-[10px] bg-green-500 px-2 text-red-600 rounded-md \">\r\n              new\r\n            </p>\r\n          )}\r\n          <p className=\"text-xs text-neutral-600\">\r\n            {isUser ? (\r\n              <IoArrowUpOutline size={15} className=\"rotate-45\" />\r\n            ) : (\r\n              <IoArrowDownOutline size={15} className=\"rotate-45\" />\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/*<div className=\"flex h-[90px] bg-green-100 flex items-center text-primary-800\">*/}\r\n      {/*  <HiOutlineArrowNarrowUp size={27} />*/}\r\n      {/*</div>*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatUser;\r\n","import React from \"react\";\r\nimport { IoCallOutline, IoLocationOutline } from \"react-icons/io5\";\r\nimport { map, uniqueId } from \"lodash\";\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductData = ({ data, translations }) => {\r\n  if (!data) return null;\r\n  const organization = data?.organization;\r\n  const user = data?.user;\r\n  const whois = organization\r\n    ? translations.tashkilot + \": \" + organization?.name\r\n    : translations.foydalanuvchi +\r\n      \": \" +\r\n      user?.firstname +\r\n      \" \" +\r\n      user?.lastname;\r\n  return (\r\n    <>\r\n      <h2 className=\"font-amazonbold py-2 text-lg border-y border-neutral-300\">\r\n        {whois}\r\n      </h2>\r\n      <h3 className=\"font-amazonbold py-1 font-bold\">{data?.name}</h3>\r\n      <h4 className=\"py-2 mb-2 block max-w-[300px]\">\r\n        <TextTruncate element=\"p\" line={3} text={data?.description} />\r\n      </h4>\r\n      <p className=\"flex items-center text-neutral-600 text-sm\">\r\n        <span className=\"mr-2\">\r\n          <IoLocationOutline />\r\n        </span>\r\n        <span>\r\n          {data?.region?.name}, {data?.district?.name}\r\n        </span>\r\n      </p>\r\n      <p className=\"flex items-center text-neutral-600 text-sm\">\r\n        <span className=\"mr-2\">\r\n          <IoCallOutline />\r\n        </span>\r\n        <span>{data?.organization?.phone || data?.user?.phone}</span>\r\n      </p>\r\n      <Link\r\n        to={organization ? `/products/${data._id}` : `/orders/${data._id}`}\r\n        className=\"bg-orange-500 text-[12px] my-4 md:text-[16px] shadow-lg shadow- shadow-orange-600 text-white cursor-pointer px-3 py-1 text-center justify-center items-center rounded-xl flex space-x-2 flex-row\"\r\n      >\r\n        Подробнее\r\n      </Link>\r\n      <p className=\"flex items-center justify-between text-neutral-600 text-lg py-2 my-2 border-y border-neutral-300\">\r\n        <span className=\"pr-2 font-amazonbold\">{translations.narxi}: </span>{\" \"}\r\n        <span className=\"text-amber-500 font-bold font-amazonbold \">\r\n          {data?.minPrice\r\n            ? data?.minPrice?.toLocaleString(\"ru-RU\") + \" - \"\r\n            : \"\"}{\" \"}\r\n          {data?.maxPrice?.toLocaleString(\"ru-RU\")} {data?.currency}\r\n        </span>\r\n      </p>\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        {data?.images &&\r\n          map(data?.images, (image) => (\r\n            <div\r\n              key={uniqueId(\"productImage\")}\r\n              className=\"w-full flex items-center justify-center rounded bg-white-900 \"\r\n            >\r\n              <img className=\"\" alt=\"alotrade\" src={image} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductData;\r\n","import React from \"react\";\r\n\r\nconst ChatIncomingMessage = ({ message: Message }) => {\r\n  const { message, user, createdAt } = Message;\r\n  return (\r\n    <div className=\"w-full flex flex-row gap-1 ml-1 my-3\">\r\n      <div className=\"rounded-full bg-white w-15 flex justify-center items-center\">\r\n        {user?.image ? (\r\n          <img\r\n            src={user.image}\r\n            alt=\"Alotarade\"\r\n            className=\"w-12 h-12 rounded-full\"\r\n          />\r\n        ) : (\r\n          <div className=\"w-12 h-12 rounded-full uppercase flex items-center justify-center bg-white-900\">\r\n            {user?.firstname[0]}\r\n            {user?.lastname[0]}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"w-2/3 bg-white rounded shadow-md px-2\">\r\n        <div className=\"flex justify-between\">\r\n          <h3 className=\"font-amazonbold text-neutral-500 text-[15px]\">\r\n            {user?.firstname} {user?.lastname}\r\n          </h3>\r\n          <p className=\"text-[12px] text-neutral-500 text-end\">\r\n            {new Date(createdAt).toLocaleTimeString().slice(0, 5)}{\" \"}\r\n            {new Date(createdAt).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n        <p className=\"text-neutral-600\">{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatIncomingMessage;\r\n","import React from \"react\";\r\n\r\nconst ChatIncomingMessage = ({ message: Message }) => {\r\n  const { message, user, createdAt } = Message;\r\n  return (\r\n    <div className=\"w-full flex flex-row my-3 gap-1 justify-end\">\r\n      <div className=\"w-2/3 bg-white rounded shadow-md px-2\">\r\n        <div className=\"flex justify-between\">\r\n          <h3 className=\"font-amazonbold text-neutral-500 text-[15px]\">\r\n            {user?.firstname} {user?.lastname}\r\n          </h3>\r\n          <p className=\"text-[12px] text-neutral-500 text-end\">\r\n            {new Date(createdAt).toLocaleTimeString().slice(0, 5)}{\" \"}\r\n            {new Date(createdAt).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n        <p className=\"text-neutral-600\">{message}</p>\r\n      </div>\r\n      <div className=\"rounded-full bg-white mr-1 w-15 flex justify-center items-center\">\r\n        {user?.image ? (\r\n          <img\r\n            src={user.image}\r\n            alt=\"Alotarade\"\r\n            className=\"w-12 h-12 rounded-full\"\r\n          />\r\n        ) : (\r\n          <div className=\"w-12 h-12 rounded-full uppercase flex items-center justify-center bg-white-900\">\r\n            {user?.firstname[0]}\r\n            {user?.lastname[0]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatIncomingMessage;\r\n","import React from \"react\";\r\nimport { IoSend } from \"react-icons/io5\";\r\nimport { getTranslations } from \"../../translation\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ChatInput = ({ changeHandler, enterHandler, sendHandler, value }) => {\r\n  const { t } = useTranslation();\r\n  const { xabarni_kiriting } = getTranslations(t);\r\n  return (\r\n    <div className=\"bg-white-900 w-full h-[5rem] px-10 py-5 flex\">\r\n      <input\r\n        value={value}\r\n        onKeyUp={enterHandler}\r\n        onChange={changeHandler}\r\n        placeholder={xabarni_kiriting}\r\n        className=\"border rounded-l w-full py-1 px-3 outline-0\"\r\n      />\r\n      <button\r\n        onClick={sendHandler}\r\n        className=\"px-3 border-r border-y text-neutral-500 rounded-r\"\r\n      >\r\n        <IoSend color=\"#fff\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n","import io from \"socket.io-client\";\r\nconst baseURL =\r\n  process.env.REACT_APP_API_SOCKET_ENDPOINT || \"http://localhost:8080\";\r\n\r\nconst socket = io(baseURL);\r\nconst token = JSON.parse(localStorage.getItem(\"_grecaptcha\"));\r\nsocket.auth = { token };\r\n\r\nexport default socket;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderMobileOffer = ({ data }) => {\r\n  const organization = data?.organization;\r\n  return (\r\n    <Link\r\n      to={organization ? `/products/${data?._id}` : `/orders/${data?._id}`}\r\n      className=\"text-white text-[14px] font-medium bg-orange-500 px-2 flex items-center justify-center\"\r\n    >\r\n      Подробнее\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HeaderMobileOffer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport ChatUser from \"../../../Components/OfferChat/ChatUser\";\r\nimport ProductData from \"../../../Components/OfferChat/ProductData\";\r\nimport ChatIncomingMessage from \"../../../Components/OfferChat/ChatIncomingMessage\";\r\nimport ChatSendingMessage from \"../../../Components/OfferChat/ChatSendingMessage\";\r\nimport ChatInput from \"../../../Components/OfferChat/ChatInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getProductByOffer } from \"../Products/productSlice\";\r\nimport { getOrderByOffer } from \"../Orders/orderSlice\";\r\nimport { universalToast } from \"../../../Components/ToastMessages/ToastMessages\";\r\nimport {\r\n  createMessage,\r\n  createOffer,\r\n  getMessagesByOffer,\r\n  getOfferById,\r\n  getOfferByUser,\r\n  getOffers,\r\n  setAllMessages,\r\n} from \"./offerSlice\";\r\nimport { map, uniqueId } from \"lodash\";\r\nimport socket from \"../../../Config/socket\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getTranslations } from \"../../../translation\";\r\nimport useWindowSize from \"../../../hooks/useWindowSize\";\r\nimport HeaderMobileOffer from \"../../../Components/OfferChat/HeaderMobileOffer\";\r\n\r\nconst Offers = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { t } = useTranslation([\"common\"]);\r\n  const translations = getTranslations(t);\r\n\r\n  const { width } = useWindowSize();\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const {\r\n    userData: { user },\r\n  } = useSelector((state) => state.login);\r\n\r\n  const { offers, messages } = useSelector((state) => state.offers);\r\n\r\n  const [id, setId] = useState(null);\r\n  const [type, setType] = useState(null);\r\n  const [currentProduct, setCurrentProduct] = useState(null);\r\n  const [currentOrder, setCurrentOrder] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [offer, setOffer] = useState(null);\r\n  const [filter, setFilter] = useState(null);\r\n  const [offerVisible, setOfferVisible] = useState(false);\r\n\r\n  const changeFilter = (e) => {\r\n    const val = e.target.name;\r\n    val === filter ? setFilter(null) : setFilter(e.target.name);\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const enterHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendHandler();\r\n    }\r\n  };\r\n\r\n  const sendHandler = () => {\r\n    if (message.length === 0) {\r\n      return universalToast(\"Внимание! Сообщение не введено\", \"warning\");\r\n    }\r\n\r\n    if (!currentProduct && !currentOrder)\r\n      return universalToast(\r\n        translations.mahsulot_yoki_buyurtma_tanlanmagan,\r\n        \"warning\"\r\n      );\r\n\r\n    const data = {\r\n      message,\r\n      product: currentProduct ? currentProduct._id : undefined,\r\n      order: currentOrder ? currentOrder._id : undefined,\r\n      offer: offer ? offer._id : undefined,\r\n    };\r\n    dispatch(offer ? createMessage(data) : createOffer(data)).then(\r\n      ({ error, payload: { offer, message } }) => {\r\n        if (!error) {\r\n          setMessage(\"\");\r\n          setOffer(offer);\r\n          newMessageHasBeenSend({\r\n            recipient: message?.recipient,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const changeOffer = (offer) => {\r\n    console.log(offer);\r\n    if (offer.order) {\r\n      setType(\"order\");\r\n      setId(offer.order._id);\r\n    }\r\n    if (offer.product) {\r\n      offer.product && setType(\"product\");\r\n      offer.product && setId(offer.product._id);\r\n    }\r\n    setOffer(offer);\r\n    setOfferVisible(true);\r\n  };\r\n\r\n  const isUser = (offererUser) => {\r\n    return offererUser?._id === user?._id;\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const newMessageHasBeenSend = ({ recipient }) => {\r\n    socket.emit(\"sendMessage\", { recipient });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"error\", ({ id, message }) => {\r\n      user._id === id && universalToast(message, \"error\");\r\n    });\r\n    socket.on(\"newMessage\", ({ recipient }) => {\r\n      const isUser = recipient === user._id;\r\n      isUser && dispatch(getOffers());\r\n      isUser &&\r\n        offer &&\r\n        dispatch(getMessagesByOffer({ id: offer._id })).then(({ error }) => {\r\n          if (!error) {\r\n            dispatch(getOfferById({ id: offer._id }));\r\n          }\r\n        });\r\n    });\r\n  }, [user, dispatch, offer]);\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      const type = location.state.type;\r\n      const id = location.state.id;\r\n      setId(id);\r\n      setType(type);\r\n      const data = { [type]: id };\r\n      dispatch(getOfferByUser(data)).then(({ error, payload: { offer } }) => {\r\n        if (!error) {\r\n          setOffer(offer);\r\n          !offer && dispatch(setAllMessages({ messages: [] }));\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(setAllMessages({ messages: [] }));\r\n      setCurrentOrder(null);\r\n      setCurrentProduct(null);\r\n    }\r\n  }, [location.state, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      if (type === \"product\") {\r\n        dispatch(getProductByOffer({ id })).then(\r\n          ({ error, payload: { product } }) => {\r\n            if (!error) {\r\n              setCurrentOrder(null);\r\n              setCurrentProduct(product);\r\n            }\r\n          }\r\n        );\r\n      }\r\n      if (type === \"order\") {\r\n        dispatch(getOrderByOffer({ id })).then(\r\n          ({ error, payload: { order } }) => {\r\n            if (!error) {\r\n              setCurrentProduct(null);\r\n              setCurrentOrder(order);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n    setOfferVisible(true);\r\n  }, [id, type, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOffers({ filter }));\r\n  }, [dispatch, filter, user]);\r\n\r\n  useEffect(() => {\r\n    offer &&\r\n      dispatch(getMessagesByOffer({ id: offer._id })).then(({ error }) => {\r\n        if (!error) {\r\n          dispatch(getOfferById({ id: offer._id }));\r\n        }\r\n      });\r\n  }, [dispatch, offer]);\r\n  if (width < 720) {\r\n    return (\r\n      <div className=\"flex flex-row h-full w-full relative\">\r\n        <div className=\"w-full md:max-w-[400px] md:min-w-[300px] md:w-1/4 h-full flex border-r-2 flex-col\">\r\n          {/* <div>\r\n            <button\r\n              onClick={changeFilter}\r\n              name=\"offererUser\"\r\n              className={`w-1/2 py-2 ${\r\n                filter === \"offererUser\" ? \"bg-primary-700\" : \"bg-primary-800\"\r\n              } text-white-900 border-r border-white-900`}\r\n            >\r\n              {translations.chiquvchi_xabar}\r\n            </button>\r\n            <button\r\n              onClick={changeFilter}\r\n              name=\"user\"\r\n              className={`w-1/2 py-2 ${\r\n                filter === \"user\" ? \"bg-primary-700\" : \"bg-primary-800\"\r\n              } text-white-900`}\r\n            >\r\n              {translations.kiruvchi_xabar}\r\n            </button>\r\n          </div> */}\r\n          <div class=\"flex justify-between md:gap-4 md:justify-center mb-[20px]\">\r\n            <button\r\n              name=\"offererUser\"\r\n              className={`block w-full md:w-auto uppercase shadow md:ml-0 rounded-tr-none rounded-br-none border-r-0 border-1 border-[#03c1f6cc] ${\r\n                (filter === \"offererUser\" && \"bg-alotrade text-white\") ||\r\n                \" bg-white text-[#00c2cb]\"\r\n              } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2`}\r\n              onClick={changeFilter}\r\n            >\r\n              Исходящие\r\n            </button>\r\n            <button\r\n              name=\"user\"\r\n              className={`block w-full md:w-auto uppercase shadow md:ml-0 rounded-tl-none rounded-bl-none border-l-0 border-1 border-[#03c1f6cc] ${\r\n                (filter === \"user\" && \"bg-alotrade text-white\") ||\r\n                \" bg-white text-alotrade\"\r\n              } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2`}\r\n              onClick={changeFilter}\r\n            >\r\n              Входящие\r\n            </button>\r\n          </div>\r\n          <div className=\"h-full w-full px-3 overflow-y-scroll\">\r\n            {map(offers, (offer) => (\r\n              <ChatUser\r\n                changeOffer={() => changeOffer(offer)}\r\n                user={user}\r\n                key={uniqueId(\"chatUser\")}\r\n                offer={offer}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`h-full ${\r\n            offerVisible\r\n              ? \"fixed top-0 left-0 w-full h-full z-50 pt-[50px]\"\r\n              : \"hidden\"\r\n          } md:w-1/2 md:relative bg-alotrade flex flex-col`}\r\n        >\r\n          <div className=\"bg-alotrade border-b border-white h-[50px] flex justify-between pl-2\">\r\n            <button\r\n              onClick={() => setOfferVisible(false)}\r\n              className=\"text-white text-[14px] font-medium\"\r\n            >\r\n              Назад\r\n            </button>\r\n            <HeaderMobileOffer data={currentProduct || currentOrder} />\r\n          </div>\r\n          <div className=\"h-full overflow-y-scroll\">\r\n            {map(messages, (message) =>\r\n              isUser(message.user) ? (\r\n                <ChatSendingMessage\r\n                  key={uniqueId(\"message\")}\r\n                  message={message}\r\n                />\r\n              ) : (\r\n                <ChatIncomingMessage\r\n                  key={uniqueId(\"message\")}\r\n                  message={message}\r\n                />\r\n              )\r\n            )}\r\n            <div className=\"\" ref={messagesEndRef} />\r\n          </div>\r\n          <ChatInput\r\n            value={message}\r\n            changeHandler={changeHandler}\r\n            enterHandler={enterHandler}\r\n            sendHandler={sendHandler}\r\n          />\r\n        </div>\r\n        {/* <div className=\"max-w-[400px] min-w-[300px] w-1/4 h-full p-4 border-l-2 bg-white\">\r\n          <ProductData\r\n            data={currentProduct || currentOrder}\r\n            translations={translations}\r\n          />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"flex flex-row h-full w-full \">\r\n      <div className=\"max-w-[400px] min-w-[300px] w-1/4 h-full flex border-r-2 flex-col\">\r\n        <div>\r\n          <button\r\n            onClick={changeFilter}\r\n            name=\"offererUser\"\r\n            className={`w-1/2 py-2 ${\r\n              filter === \"offererUser\" ? \"bg-primary-700\" : \"bg-primary-800\"\r\n            } text-white-900 border-r border-white-900`}\r\n          >\r\n            {translations.chiquvchi_xabar}\r\n          </button>\r\n          <button\r\n            onClick={changeFilter}\r\n            name=\"user\"\r\n            className={`w-1/2 py-2 ${\r\n              filter === \"user\" ? \"bg-primary-700\" : \"bg-primary-800\"\r\n            } text-white-900`}\r\n          >\r\n            {translations.kiruvchi_xabar}\r\n          </button>\r\n        </div>\r\n        <div className=\"h-full w-full px-3\">\r\n          {map(offers, (offer) => (\r\n            <ChatUser\r\n              changeOffer={() => changeOffer(offer)}\r\n              user={user}\r\n              key={uniqueId(\"chatUser\")}\r\n              offer={offer}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"h-full w-1/2 relative bg-alotrade flex flex-col\">\r\n        <div className=\"h-full\">\r\n          {map(messages, (message) =>\r\n            isUser(message.user) ? (\r\n              <ChatSendingMessage key={uniqueId(\"message\")} message={message} />\r\n            ) : (\r\n              <ChatIncomingMessage\r\n                key={uniqueId(\"message\")}\r\n                message={message}\r\n              />\r\n            )\r\n          )}\r\n          <div className=\"\" ref={messagesEndRef} />\r\n        </div>\r\n        <ChatInput\r\n          value={message}\r\n          changeHandler={changeHandler}\r\n          enterHandler={enterHandler}\r\n          sendHandler={sendHandler}\r\n        />\r\n      </div>\r\n      <div className=\"max-w-[400px] min-w-[300px] w-1/4 h-full p-4 border-l-2 bg-white\">\r\n        <ProductData\r\n          data={currentProduct || currentOrder}\r\n          translations={translations}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offers;\r\n"],"names":["offer","user","changeOffer","_id","order","product","messages","createdAt","offererUser","name","message","isRead","chatUser","image","images","isUser","isNew","onClick","className","alt","src","Date","toLocaleDateString","size","data","translations","organization","whois","tashkilot","foydalanuvchi","firstname","lastname","element","line","text","description","region","district","phone","to","narxi","minPrice","toLocaleString","maxPrice","currency","map","uniqueId","Message","toLocaleTimeString","slice","changeHandler","enterHandler","sendHandler","value","t","useTranslation","xabarni_kiriting","getTranslations","onKeyUp","onChange","placeholder","color","socket","io","process","token","JSON","parse","localStorage","getItem","auth","dispatch","useDispatch","location","useLocation","width","useWindowSize","messagesEndRef","useRef","useSelector","state","login","userData","offers","useState","id","setId","type","setType","currentProduct","setCurrentProduct","currentOrder","setCurrentOrder","setMessage","setOffer","filter","setFilter","offerVisible","setOfferVisible","changeFilter","e","val","target","key","length","universalToast","mahsulot_yoki_buyurtma_tanlanmagan","undefined","createMessage","createOffer","then","error","payload","newMessageHasBeenSend","recipient","console","log","useEffect","current","scrollIntoView","behavior","scrollToBottom","getOffers","getMessagesByOffer","getOfferById","getOfferByUser","setAllMessages","getProductByOffer","getOrderByOffer","class","ChatSendingMessage","ref","chiquvchi_xabar","kiruvchi_xabar"],"sourceRoot":""}